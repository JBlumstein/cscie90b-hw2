AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  p3
  Sample SAM Template for p3

Globals:
  Function:
    Timeout: 300

Resources:

  hw2p3Function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: hw2p3Function
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Resource: '*'
              Action:
                - 'lambda:InvokeFunction'

  hw2p3FunctionInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref hw2p3Function
      Principal: sns.amazonaws.com

  hw2p3snstopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: hw2p3snstopic
      Subscription: 
        - Protocol: lambda
          Endpoint: !GetAtt hw2p3Function.Arn
      
  hw2p3snstopicpolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: !Ref hw2p3snstopic
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: "*"
            Action: sns:Publish
            Resource: !Ref hw2p3snstopic
      Topics:
        - !Ref hw2p3snstopic

Outputs:
  hw2p3Function:
    Description: "hw2p3Function Lambda Function ARN"
    Value: !GetAtt hw2p3Function.Arn
  hw2p3FunctionIamRole:
    Description: "Implicit IAM Role created for hw2p3Function function"
    Value: !GetAtt hw2p3FunctionRole.Arn